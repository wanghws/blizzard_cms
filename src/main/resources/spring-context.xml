<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<context:annotation-config />

	<context:property-placeholder location="classpath:*.properties" />

	<bean id="config" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:init.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="UTF-8"></property>
	</bean>

	<context:component-scan base-package="com.demo.cms"><!-- base-package 如果多个，用“,”分隔 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<bean id="abstractDataSource" abstract="true" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="maxWait" value="${jdbc.maxWait}"/>
		<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
		<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
		<property name="validationQuery" value="SELECT 'x'"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="poolPreparedStatements" value="true"/>
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${jdbc.maxPoolPreparedStatementPerConnectionSize}"/>
		<property name="connectionProperties" value="config.decrypt=true" />
		<property name="filters" value="stat"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="maxActive" value="${jdbc.maxActive}"/>
		<property name="minIdle" value="${jdbc.minIdle}"/>
	</bean>

	<!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
	<bean id="masterDataSource" parent="abstractDataSource">
		<property name="url" 				value="${master.url}" />
		<property name="username" 			value="${master.username}" />
		<property name="password" 			value="${master.password}" />
	</bean>

	<bean id="slaveDataSource" parent="abstractDataSource">
		<property name="url" 				value="${slave.url}" />
		<property name="username" 			value="${slave.username}" />
		<property name="password" 			value="${slave.password}" />
	</bean>


	<!-- 动态数据源 -->
	<bean id="dynamicDataSource" class="com.demo.cms.commons.database.DynamicDataSource" lazy-init="false">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="master" value-ref="masterDataSource"/>
				<entry key="slave" value-ref="slaveDataSource"/>
				<entry key="default" value-ref="masterDataSource" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="masterDataSource"/>
		<property name="writeDataSource" value="master" />
		<property name="readDataSources">
			<array>
				<value>slave</value>
			</array>
		</property>
	</bean>

 	<!-- MyBatis begin -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource"/>
        <property name="typeAliasesPackage" value="com.demo.cms.modules"/>
        <!--<property name="typeAliasesSuperType" value="com.demo.cms.commons.entity.BaseEntity"/>-->
        <property name="mapperLocations" value="classpath:/mapper/**/*.xml"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.demo.cms.modules"/>
		<property name="annotationClass" value="com.demo.cms.commons.annotation.MyBatisDao"/>
	</bean>

	<!-- 读写切换 -->
	<bean id="dynamicDataSourceAspect" class="com.siyongbao.base.commons.database.DynamicDataSourceAspect" lazy-init="false" />
	<!-- 配置事物 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="query*"  	propagation="REQUIRED"  read-only="true" />
			<tx:method name="select*"  	propagation="REQUIRED"  read-only="true" />
			<tx:method name="get*"      propagation="REQUIRED"  read-only="true" />
			<tx:method name="find*"     propagation="REQUIRED"  read-only="true" />
			<tx:method name="delete*"  	propagation="REQUIRED" />
			<tx:method name="update*"  	propagation="REQUIRED" />
			<tx:method name="insert*"  	propagation="REQUIRED" />
			<tx:method name="create*"  	propagation="REQUIRED" />
			<tx:method name="bind*"  	propagation="REQUIRED" />
			<tx:method name="pay*"  	propagation="REQUIRED" />
			<tx:method name="*"  		propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- AOP -->
	<aop:config>
		<aop:pointcut id="servicePointcut" expression="execution(* com.siyongbao.base.modules.*.service..*(..))"/>
		<aop:advisor advice-ref="transactionAdvice" order="2" pointcut-ref="servicePointcut"  />
		<aop:advisor advice-ref="dynamicDataSourceAspect" order="1" pointcut-ref="servicePointcut" />
	</aop:config>
	
	<bean id="sessionDAO" class="com.demo.cms.commons.security.shiro.session.CacheSessionDAO"/>


	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache-local.xml" />
	</bean>

    <!--<task:executor id="executor" pool-size="10"/>-->
	<!--<task:scheduler id="scheduler" pool-size="10"/>-->
    <!--<task:annotation-driven scheduler="scheduler" executor="executor" proxy-target-class="true"/>-->
	<!--<bean id="scheduleService" class="com.demo.cms.commons.schedule.ScheduleService" init-method="init" destroy-method="destory"/>-->
</beans>
